var Proposal = Backbone.Model.extend({
	urlRoot: baseURI+"/proposals",
	extractData: function() {
		//return json version of the data
		var proposal = this.toJSON();
//console.log(proposal);		
		this.details_parsed = $.parseJSON(proposal.details);
		this.researchers_parsed = $.parseJSON(proposal.researchers);
		this.topics_parsed = $.parseJSON(proposal.topics);
		this.panels_parsed = $.parseJSON(proposal.panels);
		this.reviewers_parsed = $.parseJSON(proposal.reviewers);
		this.reviewerproposals_parsed = $.parseJSON(proposal.reviewerproposals);	
//console.log(this.attributes);		
	},
	//getters for the more embedded attributes
	title: function() {
		return this.details_parsed.title?this.details_parsed.title:'';
	},
	status: function() {
		return (this.details_parsed.status && this.details_parsed.status.name)?this.details_parsed.status.name:'';
	},
	status_date: function() {
		return (this.details_parsed.status && this.details_parsed.status.date)?this.details_parsed.status.date:'';
	},
	amount: function() {
		if (this.details_parsed.status.name=="award") {
			var funding = this.details_parsed.awarded.dollar;
			if (funding && parseInt(funding)>0) return '$'+App.addCommas((funding/1000).toFixed(0))+'K';
			else return '';
		} else return "(declined)";
	},
	lastviewed: function() {
		var associations = this.associations();
		if (associations.length>0 && associations[0].lastviewed) return $.timeago(associations[0].lastviewed);
		else return '';
	},
	panels_raw: function() {
		return this.panels_count()>0 ? this.panels_parsed : [];
	},
	assigned_users: function() {
//console.log(this.users);		
		return this.get('users') ? this.get('users') : [];		
	},
	associations: function() {
//console.log(this.associations);		
		return this.get('associations') ? this.get('associations') : [];		
	},
	researchers_count: function() {
		return this.researchers_parsed ? this.researchers_parsed.length : 0;
	},
	topics_count: function() {
		return this.topics_parsed ? this.topics_parsed.length : 0;
	},
	panels_count: function() {
		return this.panels_parsed ? this.panels_parsed.length : 0;
	},
	reviewers_count: function() {
		return this.reviewers_parsed ? this.reviewers_parsed.length : 0;
	},
	reviewer_proposals_count: function() {
		return this.reviewerproposals_parsed ? this.reviewerproposals_parsed.length : 0;
	},
	prepareData: function(allowedit,user_id) {
		//returns as an array, datatable ready
		this.extractData();
		var nsf_id = this.get('nsf_id');
		var title = '<a href="'+baseURI+'/proposals/'+this.id+'">'+nsf_id+'</a> - '+this.title();
		var date = this.status_date();
		if (this.status()=="award") var amount = this.amount(); else var amount = "(declined)";			
		var tmp = [];
		var panels = this.panels_raw();
		_.each(panels, function(panel) {
			tmp.push(panel["nsf_id"]+' - '+panel["name"]+' ('+panel["officer"]+')');
		});
		var panels = tmp.join('<br />');		
		var assigned = [];
		var users = this.assigned_users();
//console.log(this.attributes);		
//console.log(users);	
		var self = this;
		_.each(users, function(user) {
			assigned.push('<i class="icon-user"></i> <a href="'+baseURI+'/users/'+user.id+'">'+user.name+'</a> (<a href="#" id="proposals_unassign_'+self.id+'-'+user.id+'">Remove</a>)');
		});
		assigned = assigned.join('<br />');
		//associations - last viewed
		var lastviewed = [];
		var associations = this.associations();
		associations = _.sortBy(associations, function(association){ association.lastviewed; });
//console.log(associations);				
		_.each(associations, function(association) {
//console.log(association.lastviewed);					
			if (association.lastviewed) lastviewed.push(association.lastviewed);
		});
		lastviewed = _.last(lastviewed)?_.last(lastviewed):''; //.join('<br />');
//console.log(col6);					
		var actions = '';
		actions += '<a href="'+baseURI+'/proposals/'+this.id+'"><i class="icon-zoom-in"></i>Show</a><br />';
//console.log(html);							
		if (allowedit) {
			actions += '<a href="'+baseURI+'/proposals/'+this.id+'/edit"><i class="icon-pencil"></i>Edit</a>';
			actions += '<a href="#" id="proposals_remove_'+this.id+'"><i class="icon-remove"></i>Remove</a>';
			actions += '<a href="#" id="proposals_refresh_'+this.id+'"><i class="icon-refresh"></i>Refresh</a>';
		} else if (user_id) {
			actions += '<a href="#" id="proposals_unassign_'+this.id+'-'+user_id+'"><i class="icon-remove"></i>Remove</a>';
		}
		//title, date, amount, panels, assigned users, lastviewed, actions
		//return [col1, col2, col3, col4, col5, col6, col7]; //datatable ready
		return { "id": this.id, "nsf_id": nsf_id, "title": title, "date": date, "amount": amount, "panels": panels, "assigned": assigned, "lastviewed": lastviewed, "actions": actions };
	}
});
